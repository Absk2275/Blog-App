{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillOthers = void 0;\n\nconst lodash_1 = __importDefault(require(\"lodash\"));\n\nconst operators_1 = require(\"rxjs/operators\");\n/**\n * Sends a SIGTERM signal to all commands when one of the exits with a matching condition.\n */\n\n\nclass KillOthers {\n  constructor(_ref) {\n    let {\n      logger,\n      conditions\n    } = _ref;\n    this.logger = logger;\n    this.conditions = lodash_1.default.castArray(conditions);\n  }\n\n  handle(commands) {\n    const conditions = this.conditions.filter(condition => condition === 'failure' || condition === 'success');\n\n    if (!conditions.length) {\n      return {\n        commands\n      };\n    }\n\n    const closeStates = commands.map(command => command.close.pipe((0, operators_1.map)(_ref2 => {\n      let {\n        exitCode\n      } = _ref2;\n      return exitCode === 0 ? 'success' : 'failure';\n    }), (0, operators_1.filter)(state => conditions.includes(state))));\n    closeStates.forEach(closeState => closeState.subscribe(() => {\n      const killableCommands = commands.filter(command => command.killable);\n\n      if (killableCommands.length) {\n        this.logger.logGlobalEvent('Sending SIGTERM to other processes..');\n        killableCommands.forEach(command => command.kill());\n      }\n    }));\n    return {\n      commands\n    };\n  }\n\n}\n\nexports.KillOthers = KillOthers;\n;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","KillOthers","lodash_1","require","operators_1","constructor","logger","conditions","default","castArray","handle","commands","filter","condition","length","closeStates","map","command","close","pipe","exitCode","state","includes","forEach","closeState","subscribe","killableCommands","killable","logGlobalEvent","kill"],"sources":["C:/Users/Abhishek/Desktop/Complaint-Management/node_modules/concurrently/dist/src/flow-control/kill-others.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KillOthers = void 0;\nconst lodash_1 = __importDefault(require(\"lodash\"));\nconst operators_1 = require(\"rxjs/operators\");\n/**\n * Sends a SIGTERM signal to all commands when one of the exits with a matching condition.\n */\nclass KillOthers {\n    constructor({ logger, conditions }) {\n        this.logger = logger;\n        this.conditions = lodash_1.default.castArray(conditions);\n    }\n    handle(commands) {\n        const conditions = this.conditions.filter(condition => (condition === 'failure' ||\n            condition === 'success'));\n        if (!conditions.length) {\n            return { commands };\n        }\n        const closeStates = commands.map(command => command.close.pipe((0, operators_1.map)(({ exitCode }) => exitCode === 0 ? 'success' : 'failure'), (0, operators_1.filter)(state => conditions.includes(state))));\n        closeStates.forEach(closeState => closeState.subscribe(() => {\n            const killableCommands = commands.filter(command => command.killable);\n            if (killableCommands.length) {\n                this.logger.logGlobalEvent('Sending SIGTERM to other processes..');\n                killableCommands.forEach(command => command.kill());\n            }\n        }));\n        return { commands };\n    }\n}\nexports.KillOthers = KillOthers;\n;\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,MAAMC,QAAQ,GAAGR,eAAe,CAACS,OAAO,CAAC,QAAD,CAAR,CAAhC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;AACA;AACA;AACA;;;AACA,MAAMF,UAAN,CAAiB;EACbI,WAAW,OAAyB;IAAA,IAAxB;MAAEC,MAAF;MAAUC;IAAV,CAAwB;IAChC,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,UAAL,GAAkBL,QAAQ,CAACM,OAAT,CAAiBC,SAAjB,CAA2BF,UAA3B,CAAlB;EACH;;EACDG,MAAM,CAACC,QAAD,EAAW;IACb,MAAMJ,UAAU,GAAG,KAAKA,UAAL,CAAgBK,MAAhB,CAAuBC,SAAS,IAAKA,SAAS,KAAK,SAAd,IACpDA,SAAS,KAAK,SADC,CAAnB;;IAEA,IAAI,CAACN,UAAU,CAACO,MAAhB,EAAwB;MACpB,OAAO;QAAEH;MAAF,CAAP;IACH;;IACD,MAAMI,WAAW,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAAIA,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmB,CAAC,GAAGf,WAAW,CAACY,GAAhB,EAAqB;MAAA,IAAC;QAAEI;MAAF,CAAD;MAAA,OAAkBA,QAAQ,KAAK,CAAb,GAAiB,SAAjB,GAA6B,SAA/C;IAAA,CAArB,CAAnB,EAAmG,CAAC,GAAGhB,WAAW,CAACQ,MAAhB,EAAwBS,KAAK,IAAId,UAAU,CAACe,QAAX,CAAoBD,KAApB,CAAjC,CAAnG,CAAxB,CAApB;IACAN,WAAW,CAACQ,OAAZ,CAAoBC,UAAU,IAAIA,UAAU,CAACC,SAAX,CAAqB,MAAM;MACzD,MAAMC,gBAAgB,GAAGf,QAAQ,CAACC,MAAT,CAAgBK,OAAO,IAAIA,OAAO,CAACU,QAAnC,CAAzB;;MACA,IAAID,gBAAgB,CAACZ,MAArB,EAA6B;QACzB,KAAKR,MAAL,CAAYsB,cAAZ,CAA2B,sCAA3B;QACAF,gBAAgB,CAACH,OAAjB,CAAyBN,OAAO,IAAIA,OAAO,CAACY,IAAR,EAApC;MACH;IACJ,CANiC,CAAlC;IAOA,OAAO;MAAElB;IAAF,CAAP;EACH;;AApBY;;AAsBjBZ,OAAO,CAACE,UAAR,GAAqBA,UAArB;AACA"},"metadata":{},"sourceType":"script"}