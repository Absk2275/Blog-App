{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Command = void 0;\n\nconst Rx = __importStar(require(\"rxjs\"));\n\nclass Command {\n  constructor(_ref, spawnOpts, spawn, killProcess) {\n    let {\n      index,\n      name,\n      command,\n      prefixColor,\n      env,\n      cwd\n    } = _ref;\n    this.close = new Rx.Subject();\n    this.error = new Rx.Subject();\n    this.stdout = new Rx.Subject();\n    this.stderr = new Rx.Subject();\n    this.timer = new Rx.Subject();\n    this.killed = false;\n    this.exited = false;\n    this.index = index;\n    this.name = name;\n    this.command = command;\n    this.prefixColor = prefixColor;\n    this.env = env;\n    this.cwd = cwd;\n    this.killProcess = killProcess;\n    this.spawn = spawn;\n    this.spawnOpts = spawnOpts;\n  }\n\n  get killable() {\n    return !!this.process;\n  }\n  /**\n   * Starts this command, piping output, error and close events onto the corresponding observables.\n   */\n\n\n  start() {\n    const child = this.spawn(this.command, this.spawnOpts);\n    this.process = child;\n    this.pid = child.pid;\n    const startDate = new Date(Date.now());\n    const highResStartTime = process.hrtime();\n    this.timer.next({\n      startDate\n    });\n    Rx.fromEvent(child, 'error').subscribe(event => {\n      this.process = undefined;\n      const endDate = new Date(Date.now());\n      this.timer.next({\n        startDate,\n        endDate\n      });\n      this.error.next(event);\n    });\n    Rx.fromEvent(child, 'close').subscribe(_ref2 => {\n      let [exitCode, signal] = _ref2;\n      this.process = undefined;\n      this.exited = true;\n      const endDate = new Date(Date.now());\n      this.timer.next({\n        startDate,\n        endDate\n      });\n      const [durationSeconds, durationNanoSeconds] = process.hrtime(highResStartTime);\n      this.close.next({\n        command: this,\n        index: this.index,\n        exitCode: exitCode === null ? signal : exitCode,\n        killed: this.killed,\n        timings: {\n          startDate,\n          endDate,\n          durationSeconds: durationSeconds + durationNanoSeconds / 1e9\n        }\n      });\n    });\n    child.stdout && pipeTo(Rx.fromEvent(child.stdout, 'data'), this.stdout);\n    child.stderr && pipeTo(Rx.fromEvent(child.stderr, 'data'), this.stderr);\n    this.stdin = child.stdin;\n  }\n  /**\n   * Kills this command, optionally specifying a signal to send to it.\n   */\n\n\n  kill(code) {\n    if (this.killable) {\n      this.killed = true;\n      this.killProcess(this.pid, code);\n    }\n  }\n\n}\n\nexports.Command = Command;\n;\n/**\n * Pipes all events emitted by `stream` into `subject`.\n */\n\nfunction pipeTo(stream, subject) {\n  stream.subscribe(event => subject.next(event));\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","Command","Rx","require","constructor","spawnOpts","spawn","killProcess","index","name","command","prefixColor","env","cwd","close","Subject","error","stdout","stderr","timer","killed","exited","killable","process","start","child","pid","startDate","Date","now","highResStartTime","hrtime","next","fromEvent","subscribe","event","endDate","exitCode","signal","durationSeconds","durationNanoSeconds","timings","pipeTo","stdin","kill","code","stream","subject"],"sources":["C:/Users/Abhishek/Desktop/Complaint-Management/node_modules/concurrently/dist/src/command.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst Rx = __importStar(require(\"rxjs\"));\nclass Command {\n    constructor({ index, name, command, prefixColor, env, cwd }, spawnOpts, spawn, killProcess) {\n        this.close = new Rx.Subject();\n        this.error = new Rx.Subject();\n        this.stdout = new Rx.Subject();\n        this.stderr = new Rx.Subject();\n        this.timer = new Rx.Subject();\n        this.killed = false;\n        this.exited = false;\n        this.index = index;\n        this.name = name;\n        this.command = command;\n        this.prefixColor = prefixColor;\n        this.env = env;\n        this.cwd = cwd;\n        this.killProcess = killProcess;\n        this.spawn = spawn;\n        this.spawnOpts = spawnOpts;\n    }\n    get killable() {\n        return !!this.process;\n    }\n    /**\n     * Starts this command, piping output, error and close events onto the corresponding observables.\n     */\n    start() {\n        const child = this.spawn(this.command, this.spawnOpts);\n        this.process = child;\n        this.pid = child.pid;\n        const startDate = new Date(Date.now());\n        const highResStartTime = process.hrtime();\n        this.timer.next({ startDate });\n        Rx.fromEvent(child, 'error').subscribe(event => {\n            this.process = undefined;\n            const endDate = new Date(Date.now());\n            this.timer.next({ startDate, endDate });\n            this.error.next(event);\n        });\n        Rx.fromEvent(child, 'close').subscribe(([exitCode, signal]) => {\n            this.process = undefined;\n            this.exited = true;\n            const endDate = new Date(Date.now());\n            this.timer.next({ startDate, endDate });\n            const [durationSeconds, durationNanoSeconds] = process.hrtime(highResStartTime);\n            this.close.next({\n                command: this,\n                index: this.index,\n                exitCode: exitCode === null ? signal : exitCode,\n                killed: this.killed,\n                timings: {\n                    startDate,\n                    endDate,\n                    durationSeconds: durationSeconds + (durationNanoSeconds / 1e9),\n                },\n            });\n        });\n        child.stdout && pipeTo(Rx.fromEvent(child.stdout, 'data'), this.stdout);\n        child.stderr && pipeTo(Rx.fromEvent(child.stderr, 'data'), this.stderr);\n        this.stdin = child.stdin;\n    }\n    /**\n     * Kills this command, optionally specifying a signal to send to it.\n     */\n    kill(code) {\n        if (this.killable) {\n            this.killed = true;\n            this.killProcess(this.pid, code);\n        }\n    }\n}\nexports.Command = Command;\n;\n/**\n * Pipes all events emitted by `stream` into `subject`.\n */\nfunction pipeTo(stream, subject) {\n    stream.subscribe(event => subject.next(event));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}