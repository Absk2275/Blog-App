{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillOnSignal = void 0;\n\nconst operators_1 = require(\"rxjs/operators\");\n/**\n * Watches the main concurrently process for signals and sends the same signal down to each spawned\n * command.\n */\n\n\nclass KillOnSignal {\n  constructor(_ref) {\n    let {\n      process\n    } = _ref;\n    this.process = process;\n  }\n\n  handle(commands) {\n    let caughtSignal;\n    ['SIGINT', 'SIGTERM', 'SIGHUP'].forEach(signal => {\n      this.process.on(signal, () => {\n        caughtSignal = signal;\n        commands.forEach(command => command.kill(signal));\n      });\n    });\n    return {\n      commands: commands.map(command => {\n        const closeStream = command.close.pipe((0, operators_1.map)(exitInfo => {\n          const exitCode = caughtSignal === 'SIGINT' ? 0 : exitInfo.exitCode;\n          return Object.assign({}, exitInfo, {\n            exitCode\n          });\n        }));\n        return new Proxy(command, {\n          get(target, prop) {\n            return prop === 'close' ? closeStream : target[prop];\n          }\n\n        });\n      })\n    };\n  }\n\n}\n\nexports.KillOnSignal = KillOnSignal;\n;","map":{"version":3,"names":["Object","defineProperty","exports","value","KillOnSignal","operators_1","require","constructor","process","handle","commands","caughtSignal","forEach","signal","on","command","kill","map","closeStream","close","pipe","exitInfo","exitCode","assign","Proxy","get","target","prop"],"sources":["C:/Users/Abhishek/Desktop/Complaint-Management/node_modules/concurrently/dist/src/flow-control/kill-on-signal.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KillOnSignal = void 0;\nconst operators_1 = require(\"rxjs/operators\");\n/**\n * Watches the main concurrently process for signals and sends the same signal down to each spawned\n * command.\n */\nclass KillOnSignal {\n    constructor({ process }) {\n        this.process = process;\n    }\n    handle(commands) {\n        let caughtSignal;\n        ['SIGINT', 'SIGTERM', 'SIGHUP'].forEach(signal => {\n            this.process.on(signal, () => {\n                caughtSignal = signal;\n                commands.forEach(command => command.kill(signal));\n            });\n        });\n        return {\n            commands: commands.map(command => {\n                const closeStream = command.close.pipe((0, operators_1.map)(exitInfo => {\n                    const exitCode = caughtSignal === 'SIGINT' ? 0 : exitInfo.exitCode;\n                    return Object.assign({}, exitInfo, { exitCode });\n                }));\n                return new Proxy(command, {\n                    get(target, prop) {\n                        return prop === 'close' ? closeStream : target[prop];\n                    },\n                });\n            }),\n        };\n    }\n}\nexports.KillOnSignal = KillOnSignal;\n;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAA3B;AACA;AACA;AACA;AACA;;;AACA,MAAMF,YAAN,CAAmB;EACfG,WAAW,OAAc;IAAA,IAAb;MAAEC;IAAF,CAAa;IACrB,KAAKA,OAAL,GAAeA,OAAf;EACH;;EACDC,MAAM,CAACC,QAAD,EAAW;IACb,IAAIC,YAAJ;IACA,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB,EAAgCC,OAAhC,CAAwCC,MAAM,IAAI;MAC9C,KAAKL,OAAL,CAAaM,EAAb,CAAgBD,MAAhB,EAAwB,MAAM;QAC1BF,YAAY,GAAGE,MAAf;QACAH,QAAQ,CAACE,OAAT,CAAiBG,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaH,MAAb,CAA5B;MACH,CAHD;IAIH,CALD;IAMA,OAAO;MACHH,QAAQ,EAAEA,QAAQ,CAACO,GAAT,CAAaF,OAAO,IAAI;QAC9B,MAAMG,WAAW,GAAGH,OAAO,CAACI,KAAR,CAAcC,IAAd,CAAmB,CAAC,GAAGf,WAAW,CAACY,GAAhB,EAAqBI,QAAQ,IAAI;UACpE,MAAMC,QAAQ,GAAGX,YAAY,KAAK,QAAjB,GAA4B,CAA5B,GAAgCU,QAAQ,CAACC,QAA1D;UACA,OAAOtB,MAAM,CAACuB,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4B;YAAEC;UAAF,CAA5B,CAAP;QACH,CAHsC,CAAnB,CAApB;QAIA,OAAO,IAAIE,KAAJ,CAAUT,OAAV,EAAmB;UACtBU,GAAG,CAACC,MAAD,EAASC,IAAT,EAAe;YACd,OAAOA,IAAI,KAAK,OAAT,GAAmBT,WAAnB,GAAiCQ,MAAM,CAACC,IAAD,CAA9C;UACH;;QAHqB,CAAnB,CAAP;MAKH,CAVS;IADP,CAAP;EAaH;;AAzBc;;AA2BnBzB,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACA"},"metadata":{},"sourceType":"script"}