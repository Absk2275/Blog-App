{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExpandNpmWildcard = void 0;\n\nconst fs = __importStar(require(\"fs\"));\n\nconst _ = __importStar(require(\"lodash\"));\n\nconst OMISSION = /\\(!([^\\)]+)\\)/;\n/**\n * Finds wildcards in npm/yarn/pnpm run commands and replaces them with all matching scripts in the\n * `package.json` file of the current directory.\n */\n\nclass ExpandNpmWildcard {\n  constructor() {\n    let readPackage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpandNpmWildcard.readPackage;\n    this.readPackage = readPackage;\n  }\n\n  static readPackage() {\n    try {\n      const json = fs.readFileSync('package.json', {\n        encoding: 'utf-8'\n      });\n      return JSON.parse(json);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  parse(commandInfo) {\n    const [, npmCmd, cmdName, args] = commandInfo.command.match(/(npm|yarn|pnpm) run (\\S+)([^&]*)/) || [];\n    const wildcardPosition = (cmdName || '').indexOf('*'); // If the regex didn't match an npm script, or it has no wildcard,\n    // then we have nothing to do here\n\n    if (!cmdName || wildcardPosition === -1) {\n      return commandInfo;\n    }\n\n    if (!this.scripts) {\n      this.scripts = Object.keys(this.readPackage().scripts || {});\n    }\n\n    const omissionRegex = cmdName.match(OMISSION);\n    const cmdNameSansOmission = cmdName.replace(OMISSION, '');\n\n    const preWildcard = _.escapeRegExp(cmdNameSansOmission.substr(0, wildcardPosition));\n\n    const postWildcard = _.escapeRegExp(cmdNameSansOmission.substr(wildcardPosition + 1));\n\n    const wildcardRegex = new RegExp(`^${preWildcard}(.*?)${postWildcard}$`);\n    const currentName = commandInfo.name || '';\n    return this.scripts.map(script => {\n      const match = script.match(wildcardRegex);\n\n      if (omissionRegex) {\n        const toOmit = script.match(new RegExp(omissionRegex[1]));\n\n        if (toOmit) {\n          return;\n        }\n      }\n\n      if (match) {\n        return Object.assign({}, commandInfo, {\n          command: `${npmCmd} run ${script}${args}`,\n          // Will use an empty command name if command has no name and the wildcard match is empty,\n          // e.g. if `npm:watch-*` matches `npm run watch-`.\n          name: currentName + match[1]\n        });\n      }\n    }).filter(commandInfo => !!commandInfo);\n  }\n\n}\n\nexports.ExpandNpmWildcard = ExpandNpmWildcard;\n;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","ExpandNpmWildcard","fs","require","_","OMISSION","constructor","readPackage","json","readFileSync","encoding","JSON","parse","e","commandInfo","npmCmd","cmdName","args","command","match","wildcardPosition","indexOf","scripts","keys","omissionRegex","cmdNameSansOmission","replace","preWildcard","escapeRegExp","substr","postWildcard","wildcardRegex","RegExp","currentName","name","map","script","toOmit","assign","filter"],"sources":["C:/Users/Abhishek/Desktop/Complaint-Management/node_modules/concurrently/dist/src/command-parser/expand-npm-wildcard.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExpandNpmWildcard = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst _ = __importStar(require(\"lodash\"));\nconst OMISSION = /\\(!([^\\)]+)\\)/;\n/**\n * Finds wildcards in npm/yarn/pnpm run commands and replaces them with all matching scripts in the\n * `package.json` file of the current directory.\n */\nclass ExpandNpmWildcard {\n    constructor(readPackage = ExpandNpmWildcard.readPackage) {\n        this.readPackage = readPackage;\n    }\n    static readPackage() {\n        try {\n            const json = fs.readFileSync('package.json', { encoding: 'utf-8' });\n            return JSON.parse(json);\n        }\n        catch (e) {\n            return {};\n        }\n    }\n    parse(commandInfo) {\n        const [, npmCmd, cmdName, args] = commandInfo.command.match(/(npm|yarn|pnpm) run (\\S+)([^&]*)/) || [];\n        const wildcardPosition = (cmdName || '').indexOf('*');\n        // If the regex didn't match an npm script, or it has no wildcard,\n        // then we have nothing to do here\n        if (!cmdName || wildcardPosition === -1) {\n            return commandInfo;\n        }\n        if (!this.scripts) {\n            this.scripts = Object.keys(this.readPackage().scripts || {});\n        }\n        const omissionRegex = cmdName.match(OMISSION);\n        const cmdNameSansOmission = cmdName.replace(OMISSION, '');\n        const preWildcard = _.escapeRegExp(cmdNameSansOmission.substr(0, wildcardPosition));\n        const postWildcard = _.escapeRegExp(cmdNameSansOmission.substr(wildcardPosition + 1));\n        const wildcardRegex = new RegExp(`^${preWildcard}(.*?)${postWildcard}$`);\n        const currentName = commandInfo.name || '';\n        return this.scripts\n            .map(script => {\n            const match = script.match(wildcardRegex);\n            if (omissionRegex) {\n                const toOmit = script.match(new RegExp(omissionRegex[1]));\n                if (toOmit) {\n                    return;\n                }\n            }\n            if (match) {\n                return Object.assign({}, commandInfo, {\n                    command: `${npmCmd} run ${script}${args}`,\n                    // Will use an empty command name if command has no name and the wildcard match is empty,\n                    // e.g. if `npm:watch-*` matches `npm run watch-`.\n                    name: currentName + match[1],\n                });\n            }\n        })\n            .filter((commandInfo) => !!commandInfo);\n    }\n}\nexports.ExpandNpmWildcard = ExpandNpmWildcard;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}