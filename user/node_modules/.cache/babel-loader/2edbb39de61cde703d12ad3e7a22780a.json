{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InputHandler = void 0;\n\nconst Rx = __importStar(require(\"rxjs\"));\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst defaults = __importStar(require(\"../defaults\"));\n/**\n * Sends input from concurrently through to commands.\n *\n * Input can start with a command identifier, in which case it will be sent to that specific command.\n * For instance, `0:bla` will send `bla` to command at index `0`, and `server:stop` will send `stop`\n * to command with name `server`.\n *\n * If the input doesn't start with a command identifier, it is then always sent to the default target.\n */\n\n\nclass InputHandler {\n  constructor(_ref) {\n    let {\n      defaultInputTarget,\n      inputStream,\n      pauseInputStreamOnFinish,\n      logger\n    } = _ref;\n    this.logger = logger;\n    this.defaultInputTarget = defaultInputTarget || defaults.defaultInputTarget;\n    this.inputStream = inputStream;\n    this.pauseInputStreamOnFinish = pauseInputStreamOnFinish !== false;\n  }\n\n  handle(commands) {\n    if (!this.inputStream) {\n      return {\n        commands\n      };\n    }\n\n    Rx.fromEvent(this.inputStream, 'data').pipe((0, operators_1.map)(data => data.toString())).subscribe(data => {\n      const dataParts = data.split(/:(.+)/);\n      const targetId = dataParts.length > 1 ? dataParts[0] : this.defaultInputTarget;\n      const input = dataParts[1] || data;\n      const command = commands.find(command => command.name === targetId || command.index.toString() === targetId.toString());\n\n      if (command && command.stdin) {\n        command.stdin.write(input);\n      } else {\n        this.logger.logGlobalEvent(`Unable to find command ${targetId}, or it has no stdin open\\n`);\n      }\n    });\n    return {\n      commands,\n      onFinish: () => {\n        if (this.pauseInputStreamOnFinish) {\n          // https://github.com/kimmobrunfeldt/concurrently/issues/252\n          this.inputStream.pause();\n        }\n      }\n    };\n  }\n\n}\n\nexports.InputHandler = InputHandler;\n;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","InputHandler","Rx","require","operators_1","defaults","constructor","defaultInputTarget","inputStream","pauseInputStreamOnFinish","logger","handle","commands","fromEvent","pipe","map","data","toString","subscribe","dataParts","split","targetId","length","input","command","find","name","index","stdin","write","logGlobalEvent","onFinish","pause"],"sources":["C:/Users/Abhishek/Desktop/Complaint-Management/node_modules/concurrently/dist/src/flow-control/input-handler.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InputHandler = void 0;\nconst Rx = __importStar(require(\"rxjs\"));\nconst operators_1 = require(\"rxjs/operators\");\nconst defaults = __importStar(require(\"../defaults\"));\n/**\n * Sends input from concurrently through to commands.\n *\n * Input can start with a command identifier, in which case it will be sent to that specific command.\n * For instance, `0:bla` will send `bla` to command at index `0`, and `server:stop` will send `stop`\n * to command with name `server`.\n *\n * If the input doesn't start with a command identifier, it is then always sent to the default target.\n */\nclass InputHandler {\n    constructor({ defaultInputTarget, inputStream, pauseInputStreamOnFinish, logger }) {\n        this.logger = logger;\n        this.defaultInputTarget = defaultInputTarget || defaults.defaultInputTarget;\n        this.inputStream = inputStream;\n        this.pauseInputStreamOnFinish = pauseInputStreamOnFinish !== false;\n    }\n    handle(commands) {\n        if (!this.inputStream) {\n            return { commands };\n        }\n        Rx.fromEvent(this.inputStream, 'data')\n            .pipe((0, operators_1.map)(data => data.toString()))\n            .subscribe(data => {\n            const dataParts = data.split(/:(.+)/);\n            const targetId = dataParts.length > 1 ? dataParts[0] : this.defaultInputTarget;\n            const input = dataParts[1] || data;\n            const command = commands.find(command => (command.name === targetId ||\n                command.index.toString() === targetId.toString()));\n            if (command && command.stdin) {\n                command.stdin.write(input);\n            }\n            else {\n                this.logger.logGlobalEvent(`Unable to find command ${targetId}, or it has no stdin open\\n`);\n            }\n        });\n        return {\n            commands,\n            onFinish: () => {\n                if (this.pauseInputStreamOnFinish) {\n                    // https://github.com/kimmobrunfeldt/concurrently/issues/252\n                    this.inputStream.pause();\n                }\n            },\n        };\n    }\n}\nexports.InputHandler = InputHandler;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}